// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  email         String   @unique
  password  String
  nama String
  nik String? @unique
  pasien Pasien? @relation(fields: [nik],references: [nik],onDelete: Cascade)
  accounts      Account[]
  sessions      Session[]
  @@map("users")
}

model Pasien {
  nik  String @id
  nama String
  golonganDarah GolonganDarah?
  tanggalLahir DateTime?
  alamat String?
  noHp String?
  jenisKelamin JenisKelamin?
  status StatusPasien?

  User User?
}

model Admin {
  id String @id @default(cuid())
  email String @unique
  password String
  nama String
  dokterId  String @map("dokter_id")
  Dokter  Dokter @relation(fields: [dokterId], references: [id],onDelete: Cascade)
}
model Dokter {
  id  String @id @default(cuid())
  nama String
  nomorStr String @unique
  alamat String
  statusDokter StatusDokter
  @@map("dokters")
  Admin Admin[]
}

enum GolonganDarah {
  A
  B
  AB
  O
}
enum JenisKelamin {
  LAKILAKI
  PEREMPUAN
}
enum StatusDokter {
  AKTIF
  CUTI
  PENSIUN
}
enum StatusPasien {
  MENIKAH
  LAJANG
}